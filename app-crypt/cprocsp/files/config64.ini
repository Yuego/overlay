#vim:set sw=4 ts=8 fileencoding=cp1251::Кодировка:WINDOWS-1251[АБЁЪЯабёъя]
# $Revision: 263437 $
#

[Random]
# Датчики случайных чисел
# Bio - Биологический датчик
# Dsrf - Датчик ДСРФ
# Accord - Датчик Аккорд
# Sable - Датчик Соболь
[Random\Dsrf]
"DLL"="librdrdsrf.so"
[Random\CPSD]
"DLL"="librdrdsrf.so"

[Random\CPSD\Default]
Name = "CPSD RNG"
Level = 3
"/db1/kis_1" = "/var/opt/cprocsp/dsrf/db1/kis_1"
"/db2/kis_1" = "/var/opt/cprocsp/dsrf/db2/kis_1"
[Random\DSRF_EX]
"DLL"="librdrdsrf.so"

[Random\Bio_tui]
DLL = "librdrrndmbio_tui.so"

[Random\BIO_TUI\Default]
Name = "Text bio random"
Level = 5

[Random\Bio_gui]
DLL = "librdrrndmbio_gui_fgtk.so"

[Random\BIO_GUI\Default]
Name = "rndm GUI GTK"
Level = 4

[KeyDevices]
# Типы считывателей
# FAT12 - Считыватель "Дисковод"
# HDimage - Считыватель "Структура дискеты на жестком диске"
# PCSC - Считыватель смарт-карт GemPC
[KeyDevices\FAT12]
"DLL"="librdrfat12.so"
"Group"=1
[KeyDevices\HDimage]
"DLL"="librdrfat12.so"

[KeyDevices\HDIMAGE\Default]
Name = "HDD key storage"
[KeyDevices\HSM]
"DLL"="librdrfat12.so"
[KeyDevices\DIR]
"DLL"="librdrfat12.so"
"Group"=1

[KeyDevices\FLASH]
DLL = "librdrfat12.so"
Script = "mount_flash.sh"
Group = 1

[KeyDevices\FLASH\"PNP FLASH"\Default]

[KeyDevices\PCSC]
DLL = "librdrpcsc.so"
Group = 1

[KeyDevices\PCSC\"PNP PCSC"\Default]

[KeyDevices\Cloud]
DLL = "librdrcloud.so"
AuthApp = "/opt/cprocsp/sbin/amd64/oauthapp"

[KeyDevices\CLOUD\Default]

[KeyDevices\cryptoki_rutoken]
Group = 1
DLL = "librdrcryptoki.so"

[KeyDevices\cryptoki_rutoken\"PNP cryptoki"\Default]
pkcs11_dll = "librtpkcs11ecp.so"

[KeyDevices\cryptoki_esmart]
Group = 1
DLL = "librdrcryptoki.so"

[KeyDevices\cryptoki_esmart\"PNP cryptoki"\Default]
pkcs11_dll = "libisbc_pkcs11_main.so"

[KeyDevices\cryptoki_jacarta]
Group = 1
DLL = "librdrcryptoki.so"

[KeyDevices\cryptoki_jacarta\"PNP cryptoki"\Default]
pkcs11_dll = "libjcPKCS11-2.so"

[Capilite]
# Исправлять переданные в CryptoAPI неверные алгоритмы
repair_bad_algs=1
# Максимальное время в микросекундах, в течение которого разные версии файла
# на диске могут получить одну метку времени. CertControlStore при
# синхронизации хранилищ использует это значение для оптимизации.
# Значение 2000000000 отключает оптимизацию.
worst_store_resync_period=3000000
# Минимальное время действия ответа OCSP сервера,
# которое возвращает CertGetServerOcspResponseContext.
SrvOcspRespMinValiditySeconds=600
# Не кэшировать chain engine по умолчанию
#legacy_user_chain_engine=0
# Отключить оптимизацию хэширования в CMS
#legacy_CMS_hashing=0

# Параметры кэша CryptRetrieveObjectByUrl
[Capilite\cache_settings]
# Максимальное количество элементов
max_elements=100
# Время жизни OCSP-ответа в кэше в секундах, если NextUpdate не задан.
# Значение 0 отключает кэш OCSP-ответов.
OcspValiditySeconds=43200

[Capilite\Stores]
# Настройки отдельных хранилищ в формате битовой карты.
# Отсутствие переменной или 0 - хранилище в Current User (CU) состоит из
# физических хранилищ в CU и Local Machine (LM).
# 1 - хранилище в CU состоит только из физического хранилища в LM. Этот флаг
# имеет приоритет над флагом 2.
# 2 - хранилище в CU состоит только из физического хранилища в CU.
# 4 - при открытии физического хранилища с любыми флагами форсируется его
# создание.
# 8 - macOS: добавить корневые сертификаты из ОС к Capilite-хранилищу Root.
[Capilite\Stores\My]
settings=6
[Capilite\Stores\Request]
settings=6
[Capilite\Stores\Cache]
settings=6

[Capilite\Stores\Root]
settings=4
[Capilite\Stores\Trust]
settings=4
[Capilite\Stores\CA]
settings=4
[Capilite\Stores\CryptoProTrustedStore]
settings=4
[Capilite\Stores\ClientAuthIssuer]
settings=4

[PKCS11]

[PKCS11\slot0]
ProvGOST = ""
Firefox = ""
reader = ""
# настройки для PKCS11
# [PKCS11\slot0]
# ProvGOST = "Crypto-Pro GOST R 34.10-2001 KC1 CSP"
# ProvRSA = "Microsoft Strong Cryptographic Provider"
# reader = hdimage

[Parameters]
# Параметры провайдера

##############################################################################
# Управление работой списка считывателей
#
##dynamic_readers=1
# dynamic_readers включает динамическое перестроение списка считывателей:
# если во время работы приложения вставляется новое устройство,
# то оно станет видимым без необходимости перезапуска приложения.
# Динамическое перестроение может замедлять работу провайдера
# при больших накладных расходах на взаимодействие с PC/SC.
##dynamic_rdr_refresh_ms=500
# dynamic_rdr_refresh_ms - интервал опроса устройств в миллисекундах
##dynamic_rdr_cache_size=10
# dynamic_rdr_cache_size - размер кэша для списка считывателей

#AllowWorkWithoutCarrier=0
# AllowWorkWithoutCarrier=1 отключает требование держать токен или смарт-карту
# воткнутыми в считыватель, что значительно повышает скорость
# криптографических операций на пассивных токенах и не меняет на активных.
# Такое поведение соответствует КриптоПро CSP 4.0 и КриптоПро CSP 5.0 R1.


##############################################################################
# Настройки TLS
#
# kb2_tls_mode=0
# tls_client_fixed_dh_allowed=0
# tls_client_disable_legacy_cipher_suites=1
# tls_client_reject_legacy_cipher_suites=0
# tls_client_allow_cipher_suite_renegotiation=0
# tls_client_disable_revocation_check=0
# tls_client_disable_self_certificate_usage_validation=0
# tls_client_strict_certificate_verify=0
# tls_client_disable_extended_master_secret=0
# tls_client_send_root_certificate=0
# tls_client_send_multiple_chains=0
# tls_server_fixed_dh_allowed=0
# tls_server_disable_legacy_cipher_suites=0
# tls_server_allow_cipher_suite_renegotiation=0
# tls_server_disable_revocation_check=0
# tls_server_disable_self_certificate_usage_validation=0
# tls_server_use_renegotiation_info_extension=0
# tls_server_require_renegotiation_info_extension=0
# tls_max_sessions=64
# tls_split_by_messages=0
# tls_server_max_certificate_request_cas=100
# tls_server_disable_extended_master_secret=0
# tls_server_send_root_certificate=0
# tls_server_send_multiple_chains=1
tls_server_fixed_dh_allowed = 1
tls_server_use_renegotiation_info_extension = 1


##############################################################################
# Управление системой самотестирования, целостности и корректности
#
##TesterPeriod=10
#TesterPeriod=10
##TesterPeriod=100
TesterPeriod=600
# TesterPeriod - период работы тестера в секундах
##TesterTimeout=900
# TesterTimeout - таймаут работы тестера в секундах

#DisableIntegrity=true
#DisableIntegrity=true
#DisableIntegrity=true
# DisableIntegrity=true отключает динамическую систему контроля целостности

##handle_check=0
# handle_check=1 включает проверку принадлежности объектов криптопровайдеру
# handle_check=2 включает проверку соответствия вызывающего пользователя владельцу объекта и криптопровайдера

##DisableLckRec = 0
# DisableLckRec, если не 0, то контроль блокировок не производится.

##EnableLckRecAbortThread = 0
##EnableLckRecAbortThread = 1 для DEBUG
# EnableLckRecAbortThread, если не 0, то при ошибке контроля блокировок
# в соответствующем потоке вызывается сигнал ABRT, иначе приходит только
# выдача в протокол.

##EnableLckRecCheckRecursion = 0
##EnableLckRecCheckRecursion = 1 для DEBUG
# EnableLckRecCheckRecursion, если 1, то рекурсивные и реверсивные
# блокировки протоколируются, если 0, то запрещаются.


##############################################################################
# Прочие настройки
#

##AddEsAttribute=0
# AddEsAttribute управляет автоматическим добавлением атрибутов
# SigningCertificateV2 и signingTimeв CMS-подпись.
# См. https://cpdn.cryptopro.ru/content/csp40/html/cadesattrs.html

##CertStoreParamsSupported = 0
# CertStoreParamsSupported = 1 включает поддержку PP_USER_CERTSTORE.

##cryptsrv_fd_ulimit = 12000
# cryptsrv_fd_ulimit задаёт ограничение на число системных дескрипторов,
# которые можно открыть в рамках cryptsrv.

CurlUseSignals=false
# CurlUseSignals=false отключает использование сигналов curl'ом

##disable_rlimit_core = 0
# disable_rlimit_core = 1 отключает запрет создания coredump-ов провайдером.

DisableShortcuts=true
# DisableShortcuts=true отключает сохранение ярлыков на контейнеры:
# соответствия коротких имён контейнеров полным путям на носителе.

##MaxHandles=1048576
# MaxHandles - предельный размер таблицы хэндлов криптопровайдера.
# Минимальное значение: 4096, максимальное значение: 67108864, по умолчанию: 1048576;
# для мобильных платформ (iOS и Android) максимальное значение: 2097152, по умолчанию: 32768.
# Значение должно быть степенью двойки. Таблица заполняется наполовину,
# поэтому фактически можно будет создать объектов в половину указанного значения.

max_rpc_session=2048
# max_rpc_session задаёт ограничение на число RPC-сессий.

##MMXFuncs = 0
# MMXFuncs - маская для выбора используемого набора процессорных инструкций.
# См. CPC_FAST_CODE.UsedMask

##need_stat=0
##need_audit=0

##SuppressWarning = false
# SuppressWarning = true отключает окно с предупреждением.

##EnableDTBSDisplay = 0
# EnableDTBSDisplay = 1 включает поддержку средств подтверждения подписи.

##ForceDTBSDisplay = 0
# ForceDTBSDisplay = 1 требует обязательного использования устройств
# подтверждения подписи.

##LegacyEncodeSignedAttrsOnVerification = 0
# LegacyEncodeSignedAttrsOnVerification = 1 включает повторное закодирование
# подписанных атрибутов при проверке CMS-подписи.

ForceMicrosoftCRLMatching = 1
# ForceMicrosoftCRLMatching = 1 форсирует строгий алгоритм сопоставления CRL с
# сертификатом издателя

CapiliteSignatureCache = 1

##############################################################################
# Ненастраиваемые параметры
#
PKZI_Build=12997
dynamic_readers = 1
dynamic_rdr_refresh_ms = 1500
guid = "S-DF47-C685-1B10-07D6-4C10-134B-E93B-77BE"
query_success = 1
query_time = 1702907709
# PKZI_Build - номер сборки ПКЗИ, прошивается при создании дистрибутива.

[Parameters\SrvThreadException]

##DisableCatchSignal=0
# DisableCatchSignal, если не ноль, то сервис (cryptsrv и т.п.)
# завершается по первому сигналу.

##MaxException=77
# MaxException, максимальное количество исключений, если 0, то
# максимальное количество исключений 2^31-1. Цикл тестирования provtest
# использует 18 исключений, 77 - чтоб хватило на 4 цикла.

##ThrStackSize=sizeof(void*)*256*1024
# ThrStackSize - размер стека рабочего потока сервиса.

##SigStackSize=16384
# SigStackSize - размер стека обработчика сигналов.

##PrefetchThread=16
# PrefetchThread - кол-во предварительно запущенных потоков.

##PrefetchTimeout=10
# PrefetchTimeout - тайм-аут завершения рабочего потока.  Если 0, то
# потоки предварительно не запускаются.

[Parameters\PasswordPolicies]
# Регулярное выражение, матчит все видимые ascii-символы.
AsciiPasswordPolicy = "[ [:punct:][:digit:]ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz]*"

[parameters\"Crypto-Pro RSA Cryptographic Service Provider"]
KeyTimeValidityControlMode = 128

[parameters\"Crypto-Pro ECDSA and AES KC1 CSP"]
KeyTimeValidityControlMode = 128

[parameters\"Crypto-Pro ECDSA and AES CSP"]
KeyTimeValidityControlMode = 128

[parameters\"Crypto-Pro Enhanced RSA and AES KC1 CSP"]
KeyTimeValidityControlMode = 128

[parameters\"Crypto-Pro Enhanced RSA and AES CSP"]
KeyTimeValidityControlMode = 128

[parameters\"Crypto-Pro Curve25519 and AES KC1 CSP"]
KeyTimeValidityControlMode = 128

[parameters\"Crypto-Pro Curve25519 and AES CSP"]
KeyTimeValidityControlMode = 128

[Provider]
# Шаблоны провайдеров по типам носителей

# Проверка алгебраических свойств открытого ключа
CheckPublic = true

[apppath]
"libcapi10.so" = "/opt/cprocsp/lib/amd64/libcapi10.so"
"librdrfat12.so" = "/opt/cprocsp/lib/amd64/librdrfat12.so"
"librdrdsrf.so" = "/opt/cprocsp/lib/amd64/librdrdsrf.so"
"libcpui.so" = "/opt/cprocsp/lib/amd64/libcpui.so"
"libcurl.so" = "/opt/cprocsp/lib/amd64/libcpcurl.so"
"mount_flash.sh" = "/opt/cprocsp/sbin/amd64/mount_flash.sh"
"libpcsclite.so" = "/usr/lib64/libpcsclite.so.1"
"librdrpcsc.so" = "/opt/cprocsp/lib/amd64/librdrpcsc.so"
"librdrric.so" = "/opt/cprocsp/lib/amd64/librdrric.so"
"librdrrndmbio_tui.so" = "/opt/cprocsp/lib/amd64/librdrrndmbio_tui.so"
"libcsp.so" = "/opt/cprocsp/lib/amd64/libcsp.so"
"libssp.so" = "/opt/cprocsp/lib/amd64/libssp.so"
"libcapi20.so" = "/opt/cprocsp/lib/amd64/libcapi20.so"
"libcades.so" = "/opt/cprocsp/lib/amd64/libcades.so.2"
"libpkivalidator.so" = "/opt/cprocsp/lib/amd64/libpkivalidator.so.2"
"librevprov.so" = "/opt/cprocsp/lib/amd64/librevprov.so.2"
"librdrrndmbio_gui_fgtk.so" = "/opt/cprocsp/lib/amd64/librdrrndmbio_gui_" \
  "fgtk.so"
"libxcpui.so" = "/opt/cprocsp/lib/amd64/libfgcpui.so"
xcpui_app = "/opt/cprocsp/sbin/amd64/xcpui_app"
"libnpcades.so" = "/opt/cprocsp/lib/amd64/libnpcades.so.2"
"librdrcloud.so" = "/opt/cprocsp/lib/amd64/librdrcloud.so"
"librdrcryptoki.so" = "/opt/cprocsp/lib/amd64/librdrcryptoki.so"
"librdremv.so" = "/opt/cprocsp/lib/amd64/librdremv.so"
"librdrinpaspot.so" = "/opt/cprocsp/lib/amd64/librdrinpaspot.so"
"librdrkst.so" = "/opt/cprocsp/lib/amd64/librdrkst.so"
"librdrmskey.so" = "/opt/cprocsp/lib/amd64/librdrmskey.so"
"librdrnova.so" = "/opt/cprocsp/lib/amd64/librdrnova.so"
"librdredoc.so" = "/opt/cprocsp/lib/amd64/librdredoc.so"
"librdrrutoken.so" = "/opt/cprocsp/lib/amd64/librdrrutoken.so"
"librdrjacarta.so" = "/opt/cprocsp/lib/amd64/librdrjacarta.so"
"librdrcpfkc.so" = "/opt/cprocsp/lib/amd64/librdrcpfkc.so"
"librdrinfocrypt.so" = "/opt/cprocsp/lib/amd64/librdrinfocrypt.so"
"librdrrosan.so" = "/opt/cprocsp/lib/amd64/librdrrosan.so"
"libcppkcs11.so" = "/opt/cprocsp/lib/amd64/libcppkcs11.so"

[apppath\backup]
"libcurl.so" = "/usr/lib64/libcurl.so.4"
# Пути к библиотекам

[Services]
# Службы и их параметры.
# Параметр "StartService" указывает имя исполняемого файла службы
# (в каталоге @ac_default_prefix@/sbin)
# Остальные параметры зависят от службы
# Секции сервисов:
#   HSMServer - Служба Феникс-М
#   HSMClient - Служба поддержки канала "К" (клиент Феникс-М)
#   CryptSrvKB2 - Служба провайдера KB2
#   CryptSrvKC2 - Служба провайдера KC2

[Defaults\Provider]

[Defaults\Provider\"Crypto-Pro GOST R 34.10-2001 KC1 CSP"]
"Image Path" = "/opt/cprocsp/lib/amd64/libcsp.so"
"Function Table Name" = "CPCSP_GetFunctionTable"
Type = 75

[Defaults\Provider\"Crypto-Pro GOST R 34.10-2001 Cryptographic Service Provider"]
"Image Path" = "/opt/cprocsp/lib/amd64/libcsp.so"
"Function Table Name" = "CPCSP_GetFunctionTable"
Type = 75

[Defaults\Provider\"Crypto-Pro GOST R 34.10-2012 KC1 CSP"]
"Image Path" = "/opt/cprocsp/lib/amd64/libcsp.so"
"Function Table Name" = "CPCSP_GetFunctionTable"
Type = 80

[Defaults\Provider\"Crypto-Pro GOST R 34.10-2012 Cryptographic Service Provider"]
"Image Path" = "/opt/cprocsp/lib/amd64/libcsp.so"
"Function Table Name" = "CPCSP_GetFunctionTable"
Type = 80

[Defaults\Provider\"Crypto-Pro GOST R 34.10-2012 KC1 Strong CSP"]
"Image Path" = "/opt/cprocsp/lib/amd64/libcsp.so"
"Function Table Name" = "CPCSP_GetFunctionTable"
Type = 81

[Defaults\Provider\"Crypto-Pro GOST R 34.10-2012 Strong Cryptographic Service Provider"]
"Image Path" = "/opt/cprocsp/lib/amd64/libcsp.so"
"Function Table Name" = "CPCSP_GetFunctionTable"
Type = 81

[Defaults\Provider\"Crypto-Pro RSA Cryptographic Service Provider"]
"Image Path" = "/opt/cprocsp/lib/amd64/libcsp.so"
"Function Table Name" = "CPCSP_GetFunctionTable"
Type = 1

[Defaults\Provider\"Crypto-Pro ECDSA and AES KC1 CSP"]
"Image Path" = "/opt/cprocsp/lib/amd64/libcsp.so"
"Function Table Name" = "CPCSP_GetFunctionTable"
Type = 16

[Defaults\Provider\"Crypto-Pro ECDSA and AES CSP"]
"Image Path" = "/opt/cprocsp/lib/amd64/libcsp.so"
"Function Table Name" = "CPCSP_GetFunctionTable"
Type = 16

[Defaults\Provider\"Crypto-Pro Enhanced RSA and AES KC1 CSP"]
"Image Path" = "/opt/cprocsp/lib/amd64/libcsp.so"
"Function Table Name" = "CPCSP_GetFunctionTable"
Type = 24

[Defaults\Provider\"Crypto-Pro Enhanced RSA and AES CSP"]
"Image Path" = "/opt/cprocsp/lib/amd64/libcsp.so"
"Function Table Name" = "CPCSP_GetFunctionTable"
Type = 24

[Defaults\Provider\"Crypto-Pro Curve25519 and AES KC1 CSP"]
"Image Path" = "/opt/cprocsp/lib/amd64/libcsp.so"
"Function Table Name" = "CPCSP_GetFunctionTable"
Type = 32

[Defaults\Provider\"Crypto-Pro Curve25519 and AES CSP"]
"Image Path" = "/opt/cprocsp/lib/amd64/libcsp.so"
"Function Table Name" = "CPCSP_GetFunctionTable"
Type = 32
# Провайдеры. Описание провайдера должно содержать поля:
# "Image Path" = путь до разделяемой библиотеки провайдера
# "Type"= тип провайдера (71, 75)

[Defaults\"Provider Types"]

[Defaults\"Provider Types"\"Type 075"]
Name = "Crypto-Pro GOST R 34.10-2001 KC1 CSP"
TypeName = "GOST R 34.10-2001 Signature with Diffie-Hellman Key Exchange"

[Defaults\"Provider Types"\"Type 080"]
Name = "Crypto-Pro GOST R 34.10-2012 KC1 CSP"
TypeName = "GOST R 34.10-2012 (256) Signature with Diffie-Hellman Key Ex" \
  "change"

[Defaults\"Provider Types"\"Type 081"]
Name = "Crypto-Pro GOST R 34.10-2012 KC1 Strong CSP"
TypeName = "GOST R 34.10-2012 (512) Signature with Diffie-Hellman Key Ex" \
  "change"

[Defaults\"Provider Types"\"Type 001"]
Name = "Crypto-Pro RSA Cryptographic Service Provider"
TypeName = "RSA Full (Signature and Key Exchange)"

[Defaults\"Provider Types"\"Type 016"]
Name = "Crypto-Pro ECDSA and AES KC1 CSP"
TypeName = "ECDSA Full and AES"

[Defaults\"Provider Types"\"Type 024"]
Name = "Crypto-Pro Enhanced RSA and AES KC1 CSP"
TypeName = "RSA Full and AES"

[Defaults\"Provider Types"\"Type 032"]
Name = "Crypto-Pro Curve25519 and AES KC1 CSP"
TypeName = "Curve25519 Full and AES"
# Типы провайдеров. Описание типа провайдера должно содержать поля:
# "Name"= имя провайдера по умолчанию для данного типа

["dummy section comment for debug"]
# Фильтр отладочных сообщений в формате "Имя модуля"=битовая маска
# Флаги фильтрации (mofname=x):
# Потери производительности  [нет auth.* в syslog.conf] [есть auth.*]
#    N_DB_ERROR = 1             0%                      0%
#    N_DB_TRACE = 2             77%                     98%
#    N_DB_CALL = 4              70%                     98%
#    N_DB_LOG = 8               1%                      30%
#    N_DB_WARN = 32             N/A (not available)     N/A (not available)
# Флаги формата (modname_fmt=x):
#    module 1
#    thread 2
#    file_and_line 4
#    function 8
#    text 16
#    hex 32
#    error 64

[debug]

csp=1
csp_fmt=57
capi10=1
capi10_fmt=57
cpext=1
cpext_fmt=57
capi20=1
capi20_fmt=57
cspr=1
cspr_fmt=57
cryptsrv=1
cryptsrv_fmt=57
kchansrv=1
kchansrv_fmt=57
fenixmsrv=1
fenixmsrv_fmt=57
ssp=1
ssp_fmt=25
cppkcs11=1
cppkcs11_fmt=57
ocsp=1
ocsp_fmt=57
tsp=1
tsp_fmt=57
ades=1
ades_fmt=57
cades=1
cades_fmt=57
pkivalidator=1
pkivalidator_fmt=57
pcsc=0
pcsc_fmt=57
support=1
support_fmt=57
cloud = 1
cryptoki = 1
certprop = 9

[OID]

[OID\"EncodingType 1"\CertDllVerifyRevocation\DEFAULT]
DLL = "librevprov.so"
# Идентификаторы алгоритмов. Описание идентификатора должно содержать поля:
# "Name"= имя идентификатора
# "Algid"= номер идентификатора (ALG_ID) (опционально)
# "ExtraInfo"= бинарный блок доп. информации (опционально)
# "Flags"= отсутствует или 0 - запись регистрируется после стандартных,
# 1 - перед ними (опционально)

[KeyCarriers\OSCAR]
DLL = "librdrric.so"

[KeyCarriers\OSCAR\Default]
atr = hex: 00,00,00,00,00,00,00,43,52,59,50,54,4f,50,52
mask = hex: 00,00,00,00,00,00,00,ff,ff,ff,ff,ff,ff,ff,ff
folders = "0B00"

[KeyCarriers\OSCAR2]
DLL = "librdrric.so"

[KeyCarriers\OSCAR2\Default]
Name = "Oscar CSP 2.0"
atr = hex: 00,00,00,00,00,00,00,43,50,43,53,50,01,01,02
mask = hex: 00,00,00,00,00,00,00,ff,ff,ff,ff,ff,ff,ff,ff
folders = "0B00"
size_1 = 60
size_2 = 70
size_4 = 60
size_5 = 70
size_6 = 62

[KeyCarriers\OSCAR2\KChannel]
Name = "Channel K"
atr = hex: 00,00,00,00,00,00,00,43,50,43,53,50,01,01,01
mask = hex: 00,00,00,00,00,00,00,ff,ff,ff,ff,ff,ff,ff,ff
folders = "0B00"
size_1 = 56
size_2 = 36
size_4 = 56
size_5 = 36
size_6 = 62

[KeyCarriers\TRUST]
DLL = "librdrric.so"

[KeyCarriers\TRUST\Default]
atr = hex: 3b,9e,00,00,80,31,c0,65,4d,47,00,00,00,72,f7,41,81,07
mask = hex: ff,ff,00,00,ff,ff,ff,ff,ff,ff,30,00,00,ff,ff,ff,ff,ff
folders = "A\\B\\C\\D\\E\\F\\G\\H"

[KeyCarriers\TRUSTS]
DLL = "librdrric.so"

[KeyCarriers\TRUSTS\Default]
Name = "Foros SocCard"
atr = hex: 3b,9a,00,00,80,31,c0,61,00,72,f7,41,81,07
mask = hex: ff,ff,00,00,ff,ff,ff,ff,30,ff,ff,ff,ff,ff
folders = "A\\B\\C\\D"

[KeyCarriers\TRUSTD]
DLL = "librdrric.so"

[KeyCarriers\TRUSTD\Default]
atr = hex: 3b,98,00,00,80,31,c0,72,f7,41,81,07
mask = hex: ff,ff,00,00,ff,ff,ff,ff,ff,ff,ff,ff
folders = "A\\B\\C\\D\\E\\F\\G\\H"

[KeyCarriers\GEMALTO]
DLL = "librdremv.so"

[KeyCarriers\GEMALTO\Default]
Name = "GEMALTO"
atr = hex: 3b,7a,94,00,00,80,65,a2,01,01,01,3d,72,d6,43
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "SLOT#01\\SLOT#02\\SLOT#03\\SLOT#04\\SLOT#05\\SLOT#06"

[KeyCarriers\GEMALTO\GemSim1]
atr = hex: 3b,2a,00,80,65,a2,01,02,01,31,72,d6,43
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "SLOT#01\\SLOT#02\\SLOT#03\\SLOT#04\\SLOT#05\\SLOT#06"

[KeyCarriers\GEMALTO\GemSim2]
atr = hex: 3b,7a,96,00,00,80,65,a2,01,01,01,3d,72,d6,43
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "SLOT#01\\SLOT#02\\SLOT#03\\SLOT#04\\SLOT#05\\SLOT#06"

[KeyCarriers\GEMALTO\Optelio]
atr = hex: 3b,6a,00,00,80,65,a2,01,01,01,3d,72,d6,43
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "SLOT#01\\SLOT#02\\SLOT#03\\SLOT#04\\SLOT#05\\SLOT#06"

[KeyCarriers\GEMALTO\OptelioNDef]
atr = hex: 3b,6e,00,00,80,31,80,66,b0,00,00,00,00,00,83,00,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,f0,00,00,00,00,00,ff,ff,ff,ff
folders = "SLOT#01\\SLOT#02\\SLOT#03\\SLOT#04\\SLOT#05\\SLOT#06"

[KeyCarriers\GEMALTO\Native]
atr = hex: 3b,2a,00,80,65,a2,01,01,01,3d,72,d6,43
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "SLOT#01\\SLOT#02\\SLOT#03\\SLOT#04\\SLOT#05\\SLOT#06"

[KeyCarriers\INPASPOT]
DLL = "librdrinpaspot.so"

[KeyCarriers\INPASPOT\SCOneSeries]
Name = "ALIOTH, SCOne Series"
atr = hex: 3b,6d,00,00,80,31,80,65,49,53,00,00,01,83,07,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,00,00,ff,ff,ff,ff,ff

[KeyCarriers\INPASPOT\SCOneD80]
Name = "ALIOTH, SCOne D80"
atr = hex: 3b,fd,13,00,00,10,00,80,31,80,65,49,53,00,00,01,83,07,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,00,00,ff,ff,ff,ff,ff

[KeyCarriers\INPASPOT\SCOneV3]
Name = "ALIOTH, SCOne V3"
atr = hex: 3b,69,00,ff,4a,43,4f,50,32,34,32,52,32
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff

[KeyCarriers\INPASPOT\J3H081]
Name = "ALIOTH, SCOne J3H081"
atr = hex: 3b,6a,00,ff,00,31,c1,73,c8,40,00,00,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff

[KeyCarriers\INPASPOT\Default]
Name = "ALIOTH, SCOne V4"
atr = hex: 3b,68,00,ff,4a,43,4f,50,76,32,34,31
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff

[KeyCarriers\INPASPOT\Goldpac]
Name = "ALIOTH, Goldpac"
atr = hex: 3b,6a,00,00,86,65,00,a7,58,c0,55,00,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff

[KeyCarriers\INPASPOT\Ubivelox]
Name = "ALIOTH, Ubivelox"
atr = hex: 3b,68,00,00,00,73,c8,40,00,00,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff

[KeyCarriers\INPASPOT1]
DLL = "librdrinpaspot.so"

[KeyCarriers\INPASPOT1\Default]
Name = "Inpaspot"
atr = hex: 3b,fd,13,00,00,10,80,80,31,80,65,b0,83,11,00,ac,83,00,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff

[KeyCarriers\INPASPOT2]
DLL = "librdrinpaspot.so"

[KeyCarriers\INPASPOT2\Default]
Name = "Inpaspot"
atr = hex: 3b,fa,13,00,00,10,80,80,31,80,66,b0,84,0c,01,6e,01
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff

[KeyCarriers\MORPHOKST]
DLL = "librdrkst.so"

[KeyCarriers\MORPHOKST\Default]
Name = "MorphoKST"
atr = hex: 3b,68,00,00,00,73,c8,40,00,00,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff

[KeyCarriers\MSKEY]
DLL = "librdrmskey.so"

[KeyCarriers\MSKEY\Default]
Name = "Multisoft MSKey"
atr = hex: 3b,9e,00,00,80,31,c0,65,4d,53,00,00,00,72,f7,41,81,07
mask = hex: ff,ff,00,00,ff,ff,ff,ff,ff,ff,30,00,00,ff,ff,ff,ff,ff

[KeyCarriers\MSKEY\MskeyESMART]
Name = "Multisoft MSKey ESMART"
atr = hex: 3b,97,96,00,80,73,f7,c1,80,81,05
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff

[KeyCarriers\NOVACARD]
DLL = "librdrnova.so"

[KeyCarriers\NOVACARD\Default]
Name = "Novacard"
atr = hex: 3b,6f,00,00,00,31,c0,68,43,53,50,45,4d,56,03,00,00,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,00,ff,ff
folders = "0B00\\0B10"

[KeyCarriers\NOVACARD\CF58]
atr = hex: 3b,6b,00,00,00,31,c0,64,08,44,03,00,00,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,00,00,ff,ff
folders = "0B00\\0B10"

[KeyCarriers\NOVACARD\CF60]
atr = hex: 3b,6b,00,00,00,31,c1,64,08,60,32,00,00,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,00,00,ff,ff
folders = "0B00\\0B10"

[KeyCarriers\NOVACARD\Bingma]
atr = hex: 3b,66,00,00,4e,43,20,42,30,31
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "0B00\\0B10"

[KeyCarriers\NOVACARD\Castle]
atr = hex: 3b,18,96,57,69,4c,4c,20,20,04,17
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "0B00\\0B10"

[KeyCarriers\NOVACARD\RainBW]
atr = hex: 3b,66,00,00,4e,43,20,4b,30,32
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "0B00\\0B10"

[KeyCarriers\EDOC]
DLL = "librdredoc.so"

[KeyCarriers\EDOC\Default]
Name = "Electronic Document"
atr = hex: 3b,98,95,80,11,fe,80,31,c0,72,f7,41,81,07,51
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff

[KeyCarriers\RutokenECP]
DLL = "librdrrutoken.so"

[KeyCarriers\RutokenECP\Default]
atr = hex: 3b,8b,01,52,75,74,6f,6b,65,6e,20,44,53,20,c1
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "0A00\\0B00\\0C00\\0D00\\0E00\\0F00\\1000\\1100\\1200\\1300\\1" \
  "400\\1500\\1600\\1700\\1800"
size_1 = 60
size_2 = 70
size_3 = 8
size_4 = 60
size_5 = 70
size_6 = 300
size_7 = 8

[KeyCarriers\RutokenFkcOld]
DLL = "librdrrutoken.so"

[KeyCarriers\RutokenFkcOld\Default]
atr = hex: 3b,8b,01,52,75,74,6f,6b,65,6e,20,45,43,50,a0
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "0A00\\0B00\\0C00\\0D00\\0E00\\0F00\\1000\\1100\\1200\\1300\\1" \
  "400\\1500\\1600\\1700\\1800"
size_1 = 60
size_2 = 70
size_3 = 8
size_4 = 60
size_5 = 70
size_6 = 300
size_7 = 8

[KeyCarriers\RutokenECPSC]
DLL = "librdrrutoken.so"

[KeyCarriers\RutokenECPSC\Default]
Name = "Rutoken ECP SC"
atr = hex: 3b,9c,96,00,52,75,74,6f,6b,65,6e,45,43,50,73,63
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "0A00\\0B00\\0C00\\0D00\\0E00\\0F00\\1000\\1100\\1200\\1300\\1" \
  "400\\1500\\1600\\1700\\1800"
size_1 = 60
size_2 = 70
size_3 = 8
size_4 = 60
size_5 = 70
size_6 = 300
size_7 = 8

[KeyCarriers\RutokenLiteSC2]
DLL = "librdrrutoken.so"

[KeyCarriers\RutokenLiteSC2\Default]
Name = "Rutoken Lite SC"
atr = hex: 3b,9e,96,00,52,75,74,6f,6b,65,6e,4c,69,74,65,53,43,32
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "0A00\\0B00\\0C00\\0D00\\0E00\\0F00\\1000\\1100\\1200\\1300\\1" \
  "400\\1500\\1600\\1700\\1800"
size_1 = 60
size_2 = 70
size_3 = 8
size_4 = 60
size_5 = 70
size_6 = 300
size_7 = 8

[KeyCarriers\RutokenLite]
DLL = "librdrrutoken.so"

[KeyCarriers\RutokenLite\Default]
Name = "Rutoken lite"
atr = hex: 3b,8b,01,52,75,74,6f,6b,65,6e,6c,69,74,65,c2
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "0A00\\0B00\\0C00\\0D00\\0E00\\0F00\\1000\\1100\\1200\\1300\\1" \
  "400\\1500\\1600\\1700\\1800"
size_1 = 60
size_2 = 70
size_3 = 8
size_4 = 60
size_5 = 70
size_6 = 300
size_7 = 8

[KeyCarriers\Rutoken]
DLL = "librdrrutoken.so"

[KeyCarriers\Rutoken\Default]
atr = hex: 3b,6f,00,ff,00,56,72,75,54,6f,6b,6e,73,30,20,00,00,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "0A00\\0B00\\0C00\\0D00\\0E00\\0F00\\1000"
size_1 = 60
size_2 = 70
size_3 = 8
size_4 = 60
size_5 = 70
size_6 = 300
size_7 = 8

[KeyCarriers\RutokenPinpad]
DLL = "librdrrutoken.so"

[KeyCarriers\RutokenPinPad\Default]
Name = "Rutoken PinPad"
atr = hex: 3b,8b,01,52,74,50,49,4e,50,61,64,20,20,32,9c
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "0A00\\0B00\\0C00\\0D00\\0E00\\0F00\\1000\\1100\\1200\\1300\\1" \
  "400\\1500\\1600\\1700\\1800"

[KeyCarriers\RutokenECPM]
DLL = "librdrrutoken.so"

[KeyCarriers\RutokenECPM\Default]
Name = "Rutoken ECP 2151"
atr = hex: 3b,18,96,72,75,74,6f,6b,65,6e,6d
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "0A00\\0B00\\0C00\\0D00\\0E00\\0F00\\1000\\1100\\1200\\1300\\1" \
  "400\\1500\\1600\\1700\\1800"
size_1 = 60
size_2 = 70
size_3 = 3072
size_4 = 60
size_5 = 70
size_6 = 300
size_7 = 8

[KeyCarriers\RutokenECPMSC]
DLL = "librdrrutoken.so"

[KeyCarriers\RutokenECPMSC\Default]
Name = "Rutoken ECP 2151 SC"
atr = hex: 3b,1a,96,72,75,74,6f,6b,65,6e,6d,73,63
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "0A00\\0B00\\0C00\\0D00\\0E00\\0F00\\1000\\1100\\1200\\1300\\1" \
  "400\\1500\\1600\\1700\\1800"
size_1 = 60
size_2 = 70
size_3 = 3072
size_4 = 60
size_5 = 70
size_6 = 300
size_7 = 8

[KeyCarriers\RutokenNFC]
DLL = "librdrrutoken.so"

[KeyCarriers\RutokenNFC\Default]
atr = hex: 3b,9c,96,80,11,40,52,75,74,6f,6b,65,6e,45,43,50,73,63,c0
mask = hex: ff,ff,fe,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,fe
folders = "0A00\\0B00\\0C00\\0D00\\0E00\\0F00\\1000\\1100\\1200\\1300\\1" \
  "400\\1500\\1600\\1700\\1800"
size_1 = 60
size_2 = 70
size_3 = 3072
size_4 = 60
size_5 = 70
size_6 = 300
size_7 = 8

[KeyCarriers\jacarta]
DLL = "librdrjacarta.so"

[KeyCarriers\JaCarta\Default]
Name = "Aladdin R.D. JaCarta"
atr = hex: 3b,dc,18,ff,81,91,fe,1f,c3,80,73,c8,21,13,66,01,06,11,59,00,01, \
  28
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff, \
  ff,ff
folders = "CC00\\CC01\\CC02\\CC03\\CC04\\CC05\\CC06\\CC07\\CC08\\CC09"

[KeyCarriers\jacarta_lt]
DLL = "librdrjacarta.so"

[KeyCarriers\JaCarta_LT\Default]
Name = "Aladdin R.D. JaCarta LT"
atr = hex: 3b,dc,18,ff,81,11,fe,80,73,c8,21,13,66,01,06,01,30,80,01,8d
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "CC00\\CC01\\CC02\\CC03\\CC04\\CC05\\CC06\\CC07\\CC08\\CC09"

[KeyCarriers\eToken_JAVA_10]
DLL = "librdrjacarta.so"

[KeyCarriers\eToken_JAVA_10\Default]
Name = "Aladdin R.D. eToken Java"
atr = hex: 3b,d5,18,00,81,31,fe,7d,80,73,c8,21,10,f4
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "CC00\\CC01\\CC02\\CC03\\CC04\\CC05\\CC06\\CC07\\CC08\\CC09"

[KeyCarriers\eToken_JAVA_10b]
DLL = "librdrjacarta.so"

[KeyCarriers\eToken_JAVA_10b\Default]
Name = "Aladdin R.D. eToken Java"
atr = hex: 3b,d5,18,00,81,31,3a,7d,80,73,c8,21,10,30
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "CC00\\CC01\\CC02\\CC03\\CC04\\CC05\\CC06\\CC07\\CC08\\CC09"

[KeyCarriers\eToken_PRO16]
DLL = "librdrjacarta.so"

[KeyCarriers\eToken_PRO16\Default]
Name = "Aladdin R.D. eToken Pro 16K"
atr = hex: 3b,e2,00,ff,c1,10,31,fe,55,c8,02,9c
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "CC00\\CC01\\CC02\\CC03\\CC04\\CC05\\CC06\\CC07\\CC08\\CC09"

[KeyCarriers\eToken_PRO32]
DLL = "librdrjacarta.so"

[KeyCarriers\eToken_PRO32\Default]
Name = "Aladdin R.D. eToken Pro 32K"
atr = hex: 3b,f2,98,00,ff,c1,10,31,fe,55,c8,03,15
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "CC00\\CC01\\CC02\\CC03\\CC04\\CC05\\CC06\\CC07\\CC08\\CC09"

[KeyCarriers\eToken_PRO_M420]
DLL = "librdrjacarta.so"

[KeyCarriers\eToken_PRO_M420\Default]
Name = "Aladdin R.D. eToken Pro M420"
atr = hex: 3b,f2,18,00,00,c1,0a,31,fe,55,c8,06,00
mask = hex: ff,ff,ff,ff,00,ff,ff,ff,ff,ff,ff,ff,00
folders = "CC00\\CC01\\CC02\\CC03\\CC04\\CC05\\CC06\\CC07\\CC08\\CC09"

[KeyCarriers\eToken_PRO_M420B]
DLL = "librdrjacarta.so"

[KeyCarriers\eToken_PRO_M420b\Default]
Name = "Aladdin R.D. eToken Pro M420b"
atr = hex: 3b,f2,18,00,02,c1,0a,31,fe,58,c8,09,75
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "CC00\\CC01\\CC02\\CC03\\CC04\\CC05\\CC06\\CC07\\CC08\\CC09"

[KeyCarriers\rutokenfkc]
DLL = "librdrcpfkc.so"

[KeyCarriers\rutokenfkc\Default]
Name = "Rutoken FKC"
atr = hex: 3b,8b,01,52,75,74,6f,6b,65,6e,20,44,53,20,c1
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff

[KeyCarriers\rutokenfkc_nfc]
DLL = "librdrcpfkc.so"

[KeyCarriers\rutokenfkc_nfc\Default]
Name = "Rutoken FKC NFC"
atr = hex: 3b,88,80,01,52,74,53,43,77,81,83,20,6a
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff

[KeyCarriers\rutokenfkc_nfc\Contact]
atr = hex: 3b,9c,96,80,11,40,52,75,74,6f,6b,65,6e,45,43,50,73,63,c0
mask = hex: ff,ff,fe,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,fe
Name = "Rutoken FKC NFC"

[KeyCarriers\smartparkfkc]
DLL = "librdrcpfkc.so"

[KeyCarriers\smartparkfkc\Default]
Name = "SmartPark FKC"
atr = hex: 00,00,00,00,53,4d,41,52,54,50,41,52,4b,20,46,4b,43
mask = hex: 00,00,00,00,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff

[KeyCarriers\smartparkfkc\Combi]
atr = hex: 3b,9e,00,00,80,31,c0,65,4d,47,00,00,02,72,f7,41,81,07
mask = hex: ff,ff,00,00,ff,ff,ff,ff,ff,ff,30,00,02,ff,ff,ff,ff,ff
Name = "SmartPark FKC Combi"

[KeyCarriers\TokenPlusPlusLite]
DLL = "librdrinfocrypt.so"

[KeyCarriers\TokenPlusPlusLite\Default]
Name = "InfoCrypt Token++ lite"
atr = hex: 3b,df,18,00,81,31,fe,67,00,56,49,6e,66,6f,43,72,73,30,20,00,00, \
  90,00,54
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff, \
  ff,ff,ff,ff
folders = "2000\\1FFF\\1FFE\\1FFD\\1FFC\\1FFB\\1FFA\\1FF9\\1FF8\\1FF7\\1" \
  "FF6\\1FF5"

[KeyCarriers\TokenPlusPlusTls]
DLL = "librdrinfocrypt.so"

[KeyCarriers\TokenPlusPlusTls\Default]
Name = "InfoCrypt Token++ tls"
atr = hex: 3b,df,18,00,81,31,fe,67,00,5c,49,43,4d,d4,91,47,d2,79,00,00,38, \
  33,00,57
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff, \
  ff,ff,ff,ff

[KeyCarriers\VPNKEYTLS]
DLL = "librdrinfocrypt.so"

[KeyCarriers\VPNKEYTLS\Default]
Name = "InfoCrypt VPN-Key-TLS"
atr = hex: 3b,df,18,00,81,31,fe,67,00,5c,49,43,4d,d4,91,47,d2,76,00,00,38, \
  33,00,58
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff, \
  ff,ff,ff,ff

[KeyCarriers\TokenPlusPlus]
DLL = "librdrinfocrypt.so"

[KeyCarriers\TokenPlusPlus\Default]
Name = "InfoCrypt Token++"
atr = hex: 3b,df,18,00,81,31,fe,67,00,5c,49,43,4d,d4,91,47,d2,77,00,00,38, \
  33,00,59
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff, \
  ff,ff,ff,ff

[KeyCarriers\ROSAN]
DLL = "librdrrosan.so"

[KeyCarriers\ROSAN\Default]
atr = hex: 3b,68,00,00,00,73,c8,40,00,00,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,00,ff,ff,ff
folders = "D01\\D02\\D03\\D04\\D05"

[KeyCarriers\ROSAN\Rosan_GD]
atr = hex: 3b,ff,97,00,00,80,31,fe,45,00,31,c1,73,c8,21,10,64,00,00,00,00, \
  00,90,00,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,00,00,00, \
  00,ff,ff,ff,00
folders = "D01\\D02\\D03\\D04\\D05"

[KeyCarriers\ROSAN\Rosan_GD1]
atr = hex: 3b,fd,97,00,00,80,31,fe,45,00,31,c0,71,c6,64,4d,35,00,00,01,90, \
  00,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,00,00,ff, \
  ff,ff,00
folders = "D01\\D02\\D03\\D04\\D05"

[KeyCarriers\ROSAN\Rosan_GD2]
atr = hex: 3b,e8,00,00,81,31,fe,45,00,73,c8,40,13,00,90,00,9b
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "D01\\D02\\D03\\D04\\D05"

[KeyCarriers\ROSAN\Rosan_GD3]
atr = hex: 3b,6d,00,00,00,73,c8,00,13,64,54,00,00,00,00,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,00,00,00,ff,ff,ff
folders = "D01\\D02\\D03\\D04\\D05"

[KeyCarriers\ROSAN\Rosan_GD4]
atr = hex: 3b,7e,96,00,00,00,31,c0,71,c6,65,74,0b,04,16,31,01,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "D01\\D02\\D03\\D04\\D05"

[KeyCarriers\ROSAN\NXP_JCOP4]
atr = hex: 3b,d4,95,ff,81,31,fe,45,00,00,00,00,90
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,00,00,00,00,f0
folders = "D01\\D02\\D03\\D04\\D05"

[KeyCarriers\ROSAN\Kona2]
atr = hex: 3b,f8,13,00,00,10,00,00,73,c8,40,00,00,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,00,ff,ff,ff
folders = "D01\\D02\\D03\\D04\\D05"

[policy\OIDs]
"{A4CC781E-04E9-425C-AAFD-1D74DA8DFAF6}" = "libpkivalidator.so CertDllVe" \
  "rifyOCSPSigningCertificateChainPolicy"
"{AF74EE92-A059-492F-9B4B-EAD239B22A1B}" = "libpkivalidator.so CertDllVe" \
  "rifyTimestampSigningCertificateChainPolicy"
"{B52FF66F-13A5-402C-B958-A3A6B5300FB6}" = "libpkivalidator.so CertDllVe" \
  "rifySignatureCertificateChainPolicy"
5 = "libpkivalidator.so BasicConstraintsImpl"
